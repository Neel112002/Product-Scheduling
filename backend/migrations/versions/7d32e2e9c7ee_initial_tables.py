"""initial tables

Revision ID: 7d32e2e9c7ee
Revises: 
Create Date: 2025-09-25 13:07:34.921881

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '7d32e2e9c7ee'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    op.execute("CREATE EXTENSION IF NOT EXISTS citext")
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('app_user',
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('username', sa.Text(), nullable=False),
    sa.Column('user_email', postgresql.CITEXT(), nullable=False),
    sa.Column('user_password', sa.Text(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('display_name', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('user_id', name=op.f('pk_app_user')),
    sa.UniqueConstraint('user_email', name=op.f('uq_app_user_user_email'))
    )
    op.create_table('company',
    sa.Column('comp_id', sa.BigInteger(), nullable=False),
    sa.Column('comp_name', sa.Text(), nullable=False),
    sa.Column('comp_email', postgresql.CITEXT(), nullable=True),
    sa.Column('comp_address', sa.Text(), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('comp_id', name=op.f('pk_company')),
    sa.UniqueConstraint('comp_email', name=op.f('uq_company_comp_email'))
    )
    op.create_table('location',
    sa.Column('loc_id', sa.BigInteger(), nullable=False),
    sa.Column('comp_id', sa.BigInteger(), nullable=False),
    sa.Column('loc_name', sa.Text(), nullable=False),
    sa.Column('loc_address', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['comp_id'], ['company.comp_id'], name=op.f('fk_location_comp_id_company'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('loc_id', name=op.f('pk_location'))
    )
    op.create_table('user_document',
    sa.Column('doc_id', sa.BigInteger(), nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('comp_id', sa.BigInteger(), nullable=False),
    sa.Column('doc_name', sa.Text(), nullable=False),
    sa.ForeignKeyConstraint(['comp_id'], ['company.comp_id'], name=op.f('fk_user_document_comp_id_company'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['app_user.user_id'], name=op.f('fk_user_document_user_id_app_user'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('doc_id', name=op.f('pk_user_document'))
    )
    op.create_table('availability',
    sa.Column('availability_id', sa.BigInteger(), nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('location_id', sa.BigInteger(), nullable=False),
    sa.Column('day_of_week', sa.Text(), nullable=False),
    sa.Column('start_time', sa.Time(), nullable=False),
    sa.Column('end_time', sa.Time(), nullable=False),
    sa.ForeignKeyConstraint(['location_id'], ['location.loc_id'], name=op.f('fk_availability_location_id_location'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['app_user.user_id'], name=op.f('fk_availability_user_id_app_user'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('availability_id', name=op.f('pk_availability'))
    )
    op.create_table('employment',
    sa.Column('emp_id', sa.BigInteger(), nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('comp_id', sa.BigInteger(), nullable=False),
    sa.Column('location_id', sa.BigInteger(), nullable=True),
    sa.Column('position', sa.Text(), nullable=False),
    sa.Column('status', sa.Text(), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['comp_id'], ['company.comp_id'], name=op.f('fk_employment_comp_id_company'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['location_id'], ['location.loc_id'], name=op.f('fk_employment_location_id_location'), ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['app_user.user_id'], name=op.f('fk_employment_user_id_app_user'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('emp_id', name=op.f('pk_employment')),
    sa.UniqueConstraint('user_id', 'comp_id', 'location_id', name='ux_employment_user_comp_loc')
    )
    op.create_table('onboarding_invite',
    sa.Column('form_id', sa.BigInteger(), nullable=False),
    sa.Column('comp_id', sa.BigInteger(), nullable=False),
    sa.Column('location_id', sa.BigInteger(), nullable=True),
    sa.Column('email', postgresql.CITEXT(), nullable=False),
    sa.Column('status', sa.Text(), nullable=False),
    sa.ForeignKeyConstraint(['comp_id'], ['company.comp_id'], name=op.f('fk_onboarding_invite_comp_id_company'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['location_id'], ['location.loc_id'], name=op.f('fk_onboarding_invite_location_id_location'), ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('form_id', name=op.f('pk_onboarding_invite'))
    )
    op.create_table('shift',
    sa.Column('shift_id', sa.BigInteger(), nullable=False),
    sa.Column('location_id', sa.BigInteger(), nullable=False),
    sa.Column('start_time', sa.DateTime(), nullable=False),
    sa.Column('end_time', sa.DateTime(), nullable=False),
    sa.Column('status', sa.Text(), nullable=False),
    sa.ForeignKeyConstraint(['location_id'], ['location.loc_id'], name=op.f('fk_shift_location_id_location'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('shift_id', name=op.f('pk_shift'))
    )
    op.create_table('shift_assignment',
    sa.Column('shift_id', sa.BigInteger(), nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('assigned_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['shift_id'], ['shift.shift_id'], name=op.f('fk_shift_assignment_shift_id_shift'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['app_user.user_id'], name=op.f('fk_shift_assignment_user_id_app_user'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('shift_id', 'user_id', name=op.f('pk_shift_assignment'))
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('shift_assignment')
    op.drop_table('shift')
    op.drop_table('onboarding_invite')
    op.drop_table('employment')
    op.drop_table('availability')
    op.drop_table('user_document')
    op.drop_table('location')
    op.drop_table('company')
    op.drop_table('app_user')
    # ### end Alembic commands ###
